[
    {
        "id": 4359,
        "name": "",
        "username": "tango",
        "avatar_template": "/letter_avatar_proxy/v4/letter/t/e36b37/{size}.png",
        "created_at": "2021-10-27T18:51:05.469Z",
        "cooked": "<p>Exploring Simple Detection Techniques for DNS-over-HTTPS Tunnels<br>\nCarmen Kwan, Paul Janiszewski, Shela Qiu, Cathy Wang, Cecylia Bocovich<br>\n<a href=\"https://dl.acm.org/doi/10.1145/3473604.3474563\">https://dl.acm.org/doi/10.1145/3473604.3474563</a></p>\n<p>The paper explores ways to distinguish the DNS over HTTPS traffic of a DNS tunnel (namely <a href=\"https://www.bamsoftware.com/software/dnstt/\">dnstt</a>) from ordinary browser-generated DNS over HTTPS traffic. Even though DNS over HTTPS (DoH) is encrypted, censors may be able to infer the use of a tunnel by looking at side-channel features like traffic timing and volume. The authors of this paper build data sets of both circumvention and non-circumvention DoH traffic, using Selenium to drive Firefox to <a href=\"https://www.alexa.com/topsites/\">Alexa global top sites</a>. The non-circumventor data set captures the DoH produced by Firefox while visiting sites. The circumventor data set captures <em>all</em> the traffic of a Firefox which is configured to use dnstt as a proxy (so it contains not only the browser’s DNS queries and responses, but also the tunneled contents of the sites). Analysis of these two data sets turns up three traffic features—average payload length, packet rate (packets/s), and throughput (bytes/s)—and thresholds that distinguish dnstt from browser DoH with nearly 100% <a href=\"https://en.wikipedia.org/wiki/Precision_and_recall\">precision</a> and 70–80% <a href=\"https://en.wikipedia.org/wiki/Precision_and_recall\">recall</a>. To give an example of a feature threshold, over a short time window, only 1% of browser DoH has an average packet length of more than 70 bytes; but 56% of dnstt DoH does. The tests require observation of a few hundred or thousand packets before declaring a detection result.</p>\n<p>Having observed that dnstt is distinguishable by its use of large packets and high data rates, the authors modify dnstt to diminish these signals, imposing a rate limit of 500 packets/s in both directions, and a downstream data capacity per packet of 100 bytes. (Packets on the wire will actually be bigger than 100 bytes because of <a href=\"https://www.bamsoftware.com/software/dnstt/protocol.html#response\">DNS encoding</a>, HTTP, and TLS overhead.) The modified dnstt successfully avoids detection attacks based on the average payload length feature, but remains vulnerable in the packet rate and throughput features. The authors test the user experience of browsing through the rate-limited tunnel, selecting 100 sites from the <a href=\"https://umbrella.cisco.com/blog/cisco-umbrella-1-million\">Umbrella 1 million</a>; throughput is decreased by 27 times and page load time is increased by 23 times. While the low speed of the more detection-resistant tunnel may be uncomfortable for browsing, it could still be useful for low-rate applications such as bootstrapping a circumvention system.</p>\n<p>Although it is not the main focus of the paper, the authors find that dnstt does not disguise its <a href=\"https://tlsfingerprint.io/id/a91c0644c199823d\">TLS fingerprint</a>, which is fairly uncommon and distinctive of programs written in Go. They made <a href=\"https://github.com/pjanisze/dnstt-uTLS\">a fork</a> of dnstt that uses <a href=\"https://github.com/refraction-networking/utls\">uTLS</a> for TLS camouflage.</p>\n<p>Thanks to the authors for reviewing a draft of this summary.</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 1,
        "updated_at": "2021-10-27T18:51:38.410Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 22,
        "reads": 11,
        "readers_count": 10,
        "score": 112.2,
        "yours": false,
        "topic_id": 1422,
        "topic_slug": "paper-summary-exploring-simple-detection-techniques-for-dns-over-https-tunnels-foci-2021",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
            {
                "url": "https://dl.acm.org/doi/10.1145/3473604.3474563",
                "internal": false,
                "reflection": false,
                "clicks": 6
            },
            {
                "url": "https://www.bamsoftware.com/software/dnstt/",
                "internal": false,
                "reflection": false,
                "title": "dnstt – DoH- and DoT-capable DNS tunnel",
                "clicks": 3
            },
            {
                "url": "https://www.alexa.com/topsites/",
                "internal": false,
                "reflection": false,
                "title": "Alexa - Top sites",
                "clicks": 1
            },
            {
                "url": "https://github.com/refraction-networking/utls",
                "internal": false,
                "reflection": false,
                "title": "GitHub - refraction-networking/utls: Fork of the Go standard TLS library, providing low-level access to the ClientHello for mimicry purposes.",
                "clicks": 1
            },
            {
                "url": "https://umbrella.cisco.com/blog/cisco-umbrella-1-million",
                "internal": false,
                "reflection": false,
                "title": "The Cisco Umbrella 1 Million top domains - Cisco Umbrella",
                "clicks": 1
            },
            {
                "url": "https://github.com/pjanisze/dnstt-uTLS",
                "internal": false,
                "reflection": false,
                "title": "GitHub - pjanisze/dnstt-uTLS",
                "clicks": 1
            },
            {
                "url": "https://tlsfingerprint.io/id/a91c0644c199823d",
                "internal": false,
                "reflection": false,
                "title": "TLSfingerprint.io: id a91c0644c199823d",
                "clicks": 0
            },
            {
                "url": "https://en.wikipedia.org/wiki/Precision_and_recall",
                "internal": false,
                "reflection": false,
                "title": "Precision and recall - Wikipedia",
                "clicks": 0
            },
            {
                "url": "https://www.bamsoftware.com/software/dnstt/protocol.html#response",
                "internal": false,
                "reflection": false,
                "title": "dnstt protocol",
                "clicks": 0
            }
        ],
        "read": true,
        "user_title": "dnstt developer",
        "title_is_group": false,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 26,
        "hidden": false,
        "trust_level": 3,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": false,
        "wiki": false,
        "post_url": "/t/paper-summary-exploring-simple-detection-techniques-for-dns-over-https-tunnels-foci-2021/1422/1",
        "can_translate": false
    }
]