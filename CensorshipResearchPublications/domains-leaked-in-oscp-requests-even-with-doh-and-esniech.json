[
    {
        "id": 258,
        "name": "",
        "username": "tango",
        "avatar_template": "/letter_avatar_proxy/v4/letter/t/e36b37/{size}.png",
        "created_at": "2019-09-26T15:49:13.999Z",
        "cooked": "<p>I don’t think this fact is well known yet, so I will document it here. If you configure DoH and ESNI in Firefox <a href=\"https://blog.mozilla.org/security/2018/10/18/encrypted-sni-comes-to-firefox-nightly/\">according to Mozilla’s instructions</a>, you will still leak some destination domains because of <a href=\"https://en.wikipedia.org/wiki/Online_Certificate_Status_Protocol\">OCSP (Online Certificate Status Protocol)</a> requests, which are often plaintext HTTP and contain a certificate serial number, which can be looked up in <a href=\"https://en.wikipedia.org/wiki/Certificate_Transparency\">Certificate Transparency</a> logs.</p>\n<p>There are only a few places online where this is mentioned, so I suspect that many people who try to enable DoH or ESNI according to an online guide will be vulnerable. I don’t know of any workaround, in Firefox, other than setting <code>security.OCSP.enabled=0</code> in about:config.</p>\n<p>2019-01-05: <a href=\"http://blog.seanmcelroy.com/2019/01/05/ocsp-web-activity-is-not-private/\">http://blog.seanmcelroy.com/2019/01/05/ocsp-web-activity-is-not-private/</a></p>\n<blockquote>\n<p>Certificate Transparency (CT) logs increasingly provide virtually every TLS certificate to be identified by serial number.  Since OCSP responses are unencrypted and contain the serial number of the certificate as can be found in CT logs, as well as unsalted hashes of the certificate’s Distinguished Name and public key, these can easily be profiled to compromise the privacy of clients even in the presence of DoH and ESNI privacy protections.</p>\n</blockquote>\n<p>2019-03-13: <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1535235\">https://bugzilla.mozilla.org/show_bug.cgi?id=1535235</a></p>\n<blockquote>\n<p>I don’t know exactly what <em>should</em> happen, but the OCSP request defeats the purpose of ESNI. Suppose a network intermediary wants to block a site. DNS over HTTPS, ESNI, and TLS 1.3 mean that it cannot match on DNS queries, SNI, or the server certificate; nor even on the IP address without blocking unrelated sites. But it can make a blacklist of certificate serial numbers, then watch for OCSP requests/responses with serial numbers on the blacklist, and then infer (e.g. temporally) which TLS sessions they belong to, or take some other action such as blocking the client’s source IP address.</p>\n<p>Maybe the <code>trr</code> and/or <code>esni</code> prefs should additionally affect OSCP? Or maybe OCSP needs consideration in documentation about activating ESNI in Firefox?</p>\n</blockquote>\n<p>2019-03-29: <a href=\"https://bugs.torproject.org/28168#comment:7\" class=\"inline-onebox\">Use ESNI via Firefox HTTPS helper (#28168) · Issues · Legacy / Trac · GitLab</a></p>\n<blockquote>\n<p>I revised the instructions in comment:5 to add the pref <code>security.OCSP.enabled=0</code>, because ​OCSP can leak the server name even with DoH, ESNI, and TLS 1.3 are used. (This was never a problem with meek because any OCSP leaks would have been of the front domain, not the covert domain.)</p>\n</blockquote>\n<p>2019-08-13: <a href=\"https://www.usenix.org/system/files/foci19-paper_chai_update.pdf\">https://www.usenix.org/system/files/foci19-paper_chai_update.pdf</a> (Section 5.2)</p>\n<blockquote>\n<p><strong>Leakage in OCSP.</strong> For completeness, we note the certificate serial number in unencrypted OCSP (Online Certificate Status Protocol) messages can leak the server name. It can be, consequently, exploited for censorship purposes.</p>\n</blockquote>\n<p>2019-09-25: <a href=\"https://blog.powerdns.com/2019/09/25/centralised-doh-is-bad-for-privacy-in-2019-and-beyond/\" class=\"inline-onebox\">Centralised DoH is bad for privacy, in 2019 and beyond | PowerDNS Blog</a></p>\n<blockquote>\n<p>To achieve the goal of perfect privacy on untrusted networks (without running a VPN) will require us to:<br>\n4. Disable OCSP/make OCSP stapling mandatory, or replacing it by an alternate mechanism.</p>\n</blockquote>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 2,
        "updated_at": "2024-09-16T11:37:02.559Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 184,
        "reads": 40,
        "readers_count": 39,
        "score": 928.0,
        "yours": false,
        "topic_id": 122,
        "topic_slug": "domains-leaked-in-oscp-requests-even-with-doh-and-esniech",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 3,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
            {
                "url": "https://blog.powerdns.com/2019/09/25/centralised-doh-is-bad-for-privacy-in-2019-and-beyond/",
                "internal": false,
                "reflection": false,
                "title": "Centralised DoH is bad for privacy, in 2019 and beyond | PowerDNS Blog",
                "clicks": 9
            },
            {
                "url": "http://blog.seanmcelroy.com/2019/01/05/ocsp-web-activity-is-not-private/",
                "internal": false,
                "reflection": false,
                "title": "Despite DoH and ESNI, with OCSP, web activity is insecure and not private | Knowledge is Capital",
                "clicks": 5
            },
            {
                "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1535235",
                "internal": false,
                "reflection": false,
                "title": "1535235 - Plaintext OCSP can leak server name, even with ESNI",
                "clicks": 3
            },
            {
                "url": "https://bugs.torproject.org/28168#comment:7",
                "internal": false,
                "reflection": false,
                "clicks": 2
            },
            {
                "url": "https://www.usenix.org/system/files/foci19-paper_chai_update.pdf",
                "internal": false,
                "reflection": false,
                "clicks": 1
            },
            {
                "url": "https://en.wikipedia.org/wiki/Online_Certificate_Status_Protocol",
                "internal": false,
                "reflection": false,
                "title": "Online Certificate Status Protocol - Wikipedia",
                "clicks": 0
            },
            {
                "url": "https://en.wikipedia.org/wiki/Certificate_Transparency",
                "internal": false,
                "reflection": false,
                "title": "Certificate Transparency - Wikipedia",
                "clicks": 0
            },
            {
                "url": "https://blog.mozilla.org/security/2018/10/18/encrypted-sni-comes-to-firefox-nightly/",
                "internal": false,
                "reflection": false,
                "title": "Encrypted SNI Comes to Firefox Nightly | Mozilla Security Blog",
                "clicks": 0
            }
        ],
        "read": true,
        "user_title": "dnstt developer",
        "title_is_group": false,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 26,
        "hidden": false,
        "trust_level": 3,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": false,
        "wiki": false,
        "post_url": "/t/domains-leaked-in-oscp-requests-even-with-doh-and-esniech/122/1",
        "can_translate": false
    },
    {
        "id": 18533,
        "name": "",
        "username": "tango",
        "avatar_template": "/letter_avatar_proxy/v4/letter/t/e36b37/{size}.png",
        "created_at": "2023-10-07T16:44:08.057Z",
        "cooked": "<p>The <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1535235#c10\">bugzilla bug has been closed</a>, with Mozilla opting not to do anything about OCSP leaks, other than improve the documentation. These are their recommendations for preventing OCSP leaks with ECH:</p>\n<p>On the server side: implement <a href=\"https://en.wikipedia.org/wiki/OCSP_stapling\">OCSP stapling</a> (as Cloudflare reportedly already does) or use short-lived certificates (I don’t know exactly how short the validity has to be to disable OCSP checks).</p>\n<p>On the client side: disable OSCP checking the preferences.</p>\n<p><a href=\"https://wiki.mozilla.org/index.php?title=Security/Encrypted_Client_Hello&amp;oldid=1248531#Interaction_with_Revocation_Checking\" class=\"onebox\" target=\"_blank\" rel=\"noopener\">https://wiki.mozilla.org/index.php?title=Security/Encrypted_Client_Hello&amp;oldid=1248531#Interaction_with_Revocation_Checking</a></p>\n<blockquote>\n<h2>Interaction with Revocation Checking</h2>\n<p>Firefox supports various methods for checking whether certificates have been revoked including OCSP, OCSP Stapling and (experimentally) CRLite. OCSP requires querying the certificate’s revocation status with the issuing CA and so leaks information about the site a user is visiting. Consequently, sites deploying ECH should also use OCSP Stapling or short lived certificates which don’t involve any network communication and so improves user privacy (Cloudflare deploy OCSP Stapling universally). If sites do not use OCSP Stapling, then ECH still provides a substantial privacy benefit as OCSP responses are cached for multiple days and so the majority of site visits will be protected. In the longer term, CRLite will allow for privacy preserving revocation checking without requiring action by site operators.</p>\n<p>Users who prefer improved privacy over the security of revocation checking can disable revocation via the browser UX in about:preferences (or in about:config by preference).</p>\n</blockquote>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 2,
        "updated_at": "2023-10-07T17:29:13.135Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 1,
        "reads": 27,
        "readers_count": 26,
        "score": 10.4,
        "yours": false,
        "topic_id": 122,
        "topic_slug": "domains-leaked-in-oscp-requests-even-with-doh-and-esniech",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
            {
                "url": "https://wiki.mozilla.org/index.php?title=Security/Encrypted_Client_Hello&oldid=1248531#Interaction_with_Revocation_Checking",
                "internal": false,
                "reflection": false,
                "title": "Security/Encrypted Client Hello - MozillaWiki",
                "clicks": 1
            },
            {
                "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1535235#c10",
                "internal": false,
                "reflection": false,
                "clicks": 1
            },
            {
                "url": "https://en.wikipedia.org/wiki/OCSP_stapling",
                "internal": false,
                "reflection": false,
                "title": "OCSP stapling - Wikipedia",
                "clicks": 0
            }
        ],
        "read": true,
        "user_title": "dnstt developer",
        "title_is_group": false,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 26,
        "hidden": false,
        "trust_level": 3,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": false,
        "wiki": false,
        "post_url": "/t/domains-leaked-in-oscp-requests-even-with-doh-and-esniech/122/2",
        "can_translate": false
    }
]