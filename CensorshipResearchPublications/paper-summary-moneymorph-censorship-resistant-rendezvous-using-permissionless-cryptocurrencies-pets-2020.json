[
    {
        "id": 3018,
        "name": "",
        "username": "tango",
        "avatar_template": "/letter_avatar_proxy/v4/letter/t/e36b37/{size}.png",
        "created_at": "2021-04-25T22:44:32.626Z",
        "cooked": "<p>MoneyMorph: Censorship Resistant Rendezvous using Permissionless Cryptocurrencies<br>\nMohsen Minaei, Pedro Moreno-Sanchez, and Aniket Kate<br>\n<a href=\"https://censorbib.nymity.ch/#Minaei2020a\" rel=\"noopener nofollow ugc\">https://censorbib.nymity.ch/#Minaei2020a</a><br>\n<a href=\"https://github.com/moneymorph\" rel=\"noopener nofollow ugc\">https://github.com/moneymorph</a></p>\n<p>This paper is about bootstrapping a connection into a censorship circumvention system by steganographically encoding rendezvous information into cryptocurrency transactions. It can be used, for example, by a censored user to retrieve the address of a Tor bridge, in a way that a censor cannot easily block. The unblockability argument rests on the economic importance of cryptocurrencies, and on the covert transactions being indistinguishable from ordinary transactions. The authors formalize a generic “stego-bootstrapping” scheme as a two-way challenge and response, in which a censored <em>user</em> and a remote <em>decoder</em> exchange short messages. The decoder has a public key known in advance, but the user does not. They then describe MoneyMorph, an instantiation of stego-bootstrapping over cryptocurrency transactions, and show that it meets the security goals of <em>rareness</em> (ordinary transactions are not spuriously interpreted as MoneyMorph transactions) and <em>security against chosen-covertext attacks</em> (it is not possible to distinguish a MoneyMorph message from a regular transaction, without the key, even if you control the plaintext of the message). Parties send messages by encoding them into transactions on the public blockchain, keyed so that only the intended recipient may decode them. Receivers scan the blockchain for recent transactions, try to decode them, and act on the ones that are decodable. Specifically, the decoder looks for transactions whose decryption contains a distinguished <em>tag</em> bitstring, and the user looks for a return payment from an address to which it has previously sent a challenge.</p>\n<p>MoneyMorph itself is generic over cryptocurrencies: it calls out to an <em>encoding scheme</em> tailored for a specific one. Encoding schemes must produce transactions that are not only syntactically valid, but also do not stand out from other transaction formats commonly found on the blockchain. The authors provide encoding schemes for Bitcoin, Zcash, Monero, and Ethereum. They differ in terms of how much bandwidth they offer and how much they cost to use. In the Bitcoin encoding scheme, for example, the user publishes a transaction with two outputs: one that sends a small amount of Bitcoin to an address the decoder can spend from, and one to an “address” that is really the user’s encrypted message, up to 20 bytes long. The latter coins become permanently unspendable. The decoder uses the user’s sent coins to cover its own costs in sending a response transaction, whose two outputs similarly encode a ciphertext message; these coins too are lost. The Bitcoin encoding scheme provides 20 bytes of bandwidth upstream and 40 bytes downstream, with one exchange costing about 1.25 USD in transaction fees and lost coins. Zcash has the greatest efficiency of the encoding schemes, offering 1148/1168 bytes up/down, at a cost of about 0.01 USD.</p>\n<p>Thanks to the authors for commenting on a draft of this summary.</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 1,
        "updated_at": "2021-04-25T22:44:32.626Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 12,
        "reads": 6,
        "readers_count": 5,
        "score": 61.2,
        "yours": false,
        "topic_id": 1034,
        "topic_slug": "paper-summary-moneymorph-censorship-resistant-rendezvous-using-permissionless-cryptocurrencies-pets-2020",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
            {
                "url": "https://github.com/moneymorph",
                "internal": false,
                "reflection": false,
                "title": "moneymorph · GitHub",
                "clicks": 4
            },
            {
                "url": "https://censorbib.nymity.ch/#Minaei2020a",
                "internal": false,
                "reflection": false,
                "title": "The Internet censorship bibliography",
                "clicks": 3
            }
        ],
        "read": true,
        "user_title": "dnstt developer",
        "title_is_group": false,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 26,
        "hidden": false,
        "trust_level": 3,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": false,
        "wiki": false,
        "post_url": "/t/paper-summary-moneymorph-censorship-resistant-rendezvous-using-permissionless-cryptocurrencies-pets-2020/1034/1",
        "can_translate": false
    }
]