[
    {
        "id": 1818,
        "name": "",
        "username": "tango",
        "avatar_template": "/letter_avatar_proxy/v4/letter/t/e36b37/{size}.png",
        "created_at": "2020-09-02T17:27:17.214Z",
        "cooked": "<p>Slitheen++: Stealth TLS-based Decoy Routing<br>\nBenedikt Birtel, Christian Rossow<br>\n<a href=\"https://censorbib.nymity.ch/#Birtel2020a\" class=\"onebox\" target=\"_blank\" rel=\"nofollow noopener\">https://censorbib.nymity.ch/#Birtel2020a</a><br>\n<a href=\"https://www.usenix.org/conference/foci20/presentation/birtel\" rel=\"nofollow noopener\">https://www.usenix.org/conference/foci20/presentation/birtel</a> (video and slides)<br>\n<a href=\"https://cispa.saarland/group/rossow/papers/tr-slitheen++.pdf\" rel=\"nofollow noopener\">https://cispa.saarland/group/rossow/papers/tr-slitheen++.pdf</a> (extended technical report)<br>\n<a href=\"https://cispa.saarland/group/rossow/files/Slitheen++.tar.gz\" rel=\"nofollow noopener\">https://cispa.saarland/group/rossow/files/Slitheen++.tar.gz</a> (source code)</p>\n<p>Slitheen++ is a collection of refinements to <a href=\"https://censorbib.nymity.ch/#Bocovich2016a\" rel=\"nofollow noopener\">Slitheen</a>, a decoy routing design that prioritizes indistinguishability of traffic patterns. Slitheen++ responds to certain issues that were left open in the original Slitheen design, and fixes bugs in its prototype implementation. For the most part, the changes are intended to decrease distinguishability, but Slitheen++ also make compromises in the downstream direction, increasing distinguishability for the sake of more consistent throughput.</p>\n<p>Recall that Slitheen works by <em>traffic replacement</em> in HTTPS connections. In the upstream direction, the client sends data in an “X-Slitheen” HTTP header, deleting or compressing other headers to make room without changing the packet size. In the downstream direction, the relay station replaces the contents of “leaf” resources, such as images and videos, again without changing their size. An <em>overt user simulator</em> provides a carrier for the covert session by imitating a human web user, fetching HTTPS pages so that Slitheen can replace their content. Slitheen++ makes a number of changes:</p>\n<ul>\n<li>The Slitheen paper left the details of the overt user simulator open, and its prototype implementation was simplistic. In Slitheen++, the overt user simulator is more realistic, following links within a domain, and inserting delays between fetches to simulate the thinking time of a human user.</li>\n<li>The upstream channel uses code book–style compression of HTTP headers to make room for the X-Slitheen header. Something of this nature was proposed in the Slitheen paper but not implemented in the prototype.</li>\n<li>Alternative stream schedulers provide better fairness between the many streams that are multiplexed into a covert session.</li>\n<li>Various code-quality bugs, like uninitialized variables, are fixed.</li>\n<li>Slitheen++ removes superencryption of covert data, which was introduced in the followup to the Slitheen paper, <a href=\"https://censorbib.nymity.ch/#Bocovich2018a\" rel=\"nofollow noopener\">“Secure asymmetry and deployability for decoy routing systems”</a> (Appendix B). The Slitheen++ authors argue that much of what you would want to send through the covert tunnel is already separately encrypted and authenticated—by TLS, for example—making the superencryption unnecessary.</li>\n<li>Neither Slitheen nor Slitheen++ can replace traffic when TCP segments arrive out of order, or when a TLS record does not fit in a single TCP segment. In Slitheen++, covert TLS flows are run through a normalizing proxy (<a href=\"https://trafficserver.apache.org/\" rel=\"nofollow noopener\">Apache Traffic Server</a>) to reorder packets and reduce the size of TLS records. This provides more usable downstream capacity, at the cost of altering traffic patterns and network fingerprints.</li>\n</ul>\n<p>Some other acknowledged issues from Slitheen are left open:</p>\n<ul>\n<li>Slitheen++ requires symmetric routes and downstream flow blocking.</li>\n<li>Slitheen++ does not work with HTTP/2.</li>\n</ul>\n<p>Slitheen++ is evaluated in a VM environment, with the client, normalizing TLS proxy, and relay station running on the same host. The experiments test downloading a web page from ten different domains, using wikipedia.<a></a>org as the overt domain. The link-following feature of the overt user simulator in Slitheen++ slightly diminishes performance, because different links have different leaf resources and therefore downstream capacity. Simulated thinking time in the overt user simulator increases covert page download times by several seconds.</p>\n<p>Thanks to the authors for commenting on a draft of this summary.</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 1,
        "updated_at": "2020-09-02T17:27:17.214Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 5,
        "reads": 8,
        "readers_count": 7,
        "score": 26.6,
        "yours": false,
        "topic_id": 661,
        "topic_slug": "paper-summary-slitheen-stealth-tls-based-decoy-routing-foci-2020",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
            {
                "url": "https://cispa.saarland/group/rossow/papers/tr-slitheen++.pdf",
                "internal": false,
                "reflection": false,
                "clicks": 2
            },
            {
                "url": "https://www.usenix.org/conference/foci20/presentation/birtel",
                "internal": false,
                "reflection": false,
                "title": "Slitheen++: Stealth TLS-based Decoy Routing | USENIX",
                "clicks": 2
            },
            {
                "url": "https://censorbib.nymity.ch/#Bocovich2016a",
                "internal": false,
                "reflection": false,
                "title": "The Internet censorship bibliography",
                "clicks": 1
            },
            {
                "url": "https://censorbib.nymity.ch/#Birtel2020a",
                "internal": false,
                "reflection": false,
                "title": "The Internet censorship bibliography",
                "clicks": 1
            },
            {
                "url": "https://trafficserver.apache.org/",
                "internal": false,
                "reflection": false,
                "title": "Apache Traffic Server",
                "clicks": 0
            },
            {
                "url": "https://cispa.saarland/group/rossow/files/Slitheen++.tar.gz",
                "internal": false,
                "reflection": false,
                "clicks": 0
            },
            {
                "url": "https://censorbib.nymity.ch/#Bocovich2018a",
                "internal": false,
                "reflection": false,
                "title": "The Internet censorship bibliography",
                "clicks": 0
            }
        ],
        "read": true,
        "user_title": "dnstt developer",
        "title_is_group": false,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 26,
        "hidden": false,
        "trust_level": 3,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": false,
        "wiki": false,
        "post_url": "/t/paper-summary-slitheen-stealth-tls-based-decoy-routing-foci-2020/661/1",
        "can_translate": false
    }
]