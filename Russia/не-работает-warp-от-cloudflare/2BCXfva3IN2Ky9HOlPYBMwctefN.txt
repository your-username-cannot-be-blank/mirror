220228 11:32:24.243 [INFO][6563..init(with:)] Log started, build: 6.8.78e0d29f
220228 11:32:24.249 [INFO][6563.Tunnel.startTunnel] Tunnel started with options: [:]
220228 11:32:24.250 [INFO][6563.Tunnel.startTunnel] Configuration age: 96.6 minutes
220228 11:32:24.251 [INFO][6563.ResolverRuleList.temporalFallbackEnabled] enabled: false
220228 11:32:24.251 [INFO][6563.DNSLogManager.dnsLogEnabled] log DNS queries: false
220228 11:32:24.252 [INFO][6563.LogExtension.configurationInfo] App version: 6.8 (2201281922.1) - Registration ID: 7ee29318-5dc4-4c52-89e2-81cdddd9505c - Client public key: 87367ffd989947fa67d15e09c6b2f136b98349b1a9a904817f01d715966a5f4f - Warp: true - DNS Protocol: dot - NXDomain Fallback: ConfigManageableItem<Bool>(value: false, locked: false, visible: true) - Log DNS queries: false
220228 11:32:24.254 [INFO][6563.Tunnel.waitForPathSatisfied] waiting for path to become satisfied
220228 11:32:24.490 [INFO][6563.Tunnel.waitForPathSatisfied] path updated ...
220228 11:32:24.490 [INFO][6563.Tunnel.updateSettingsAndConnect] path is satisfied
220228 11:32:24.491 [INFO][6563.Tunnel.updateNetwork] Default path: 
    status = satisfied
    reasonCode = 0
    reason = Path is satisfied
    isViable = NO
    isExpensive = YES
    isConstrained = NO
    clientID = FCCA6D39-24F4-4733-AC2C-7D74B0FAB14A
    interfaceType = cellular
    mtu = 1450
    maximumDatagramSize = 1390
    secondsSinceInterfaceChange = 71
    interfaceOption = pdp_ip0 : C0A42907-B83D-4949-A6F3-17F25BE064A8
    interface = {
        type = cellular
        subtype = other
        interfaceName = pdp_ip0
        interfaceIndex = 7
        generation = 1867
        mtu = 1450
        ipv4Netmask = {255.255.255.255:0
        }
        supportsMulticast = YES
        ipv4Routable = YES
        expensive = YES
    }
    scopedInterface = {
        type = cellular
        subtype = other
        interfaceName = pdp_ip0
        interfaceIndex = 7
        generation = 0
        mtu = 1450
        supportsMulticast = YES
        expensive = YES
    }
    dnsServers = (
        {10.10.32.131:0
        },
        {8.8.8.8:0
        },
    )
    resolvers = [0 - Default Direct DNS53 servers = [ 10.10.32.131 8.8.8.8 ] domains = [ ]]
    dnsSearchDomains = (
    )
    gateways = (
        {10.104.246.212:0
        },
    )
    agents = (
        {
            domain = Persistent
            type = Persistent
            UUID = 570FCB9D-2C3C-48C1-A2D3-8BC7AF32BA8C
            description = Persistent interface guidance
            isActive = YES
            isUserActivated = NO
            isVoluntary = NO
        },
        {
            domain = Cellular
            type = Internet
            UUID = 709D878D-F74F-4E96-BC85-A44C37D91D9E
            description = CommCenter: Internet.0
            isActive = YES
            isUserActivated = YES
            isVoluntary = YES
            isNetworkProvider = YES
        },
        {
            domain = SystemConfig
            type = DNSAgent
            UUID = 1CBC3268-9AA4-1C4E-D347-79120616228E
            description = DNSAgent-@pdp_ip0
            isActive = YES
            isUserActivated = YES
            isVoluntary = NO
        },
        {
            domain = Skywalk
            type = FlowSwitch
            UUID = C0A42907-B83D-4949-A6F3-17F25BE064A8
            description = Userspace Networking
            isActive = YES
            isUserActivated = NO
            isVoluntary = NO
            isNexusProvider = YES
        },
    )
    supportsIPv4 = YES
    supportsIPv6 = NO
    supportsDNS = YES
    hasProxySettings = NO
220228 11:32:24.491 [INFO][6563.NetworkInfo.collectNetworkInfo] HTTP Proxy enabled: false
220228 11:32:24.491 [INFO][6563.NetworkInfo.detectCaptivePortal] Skipping captive portal test on cellular
220228 11:32:24.491 [INFO][6563.NetworkInfo.collectNetworkInfo] Captive portal status (1st attempt): ok
220228 11:32:24.491 [INFO][6563.NetworkInfo.collectNetworkInfo] IPv4 supported: true; IPv6 supported: false
220228 11:32:24.523 [INFO][6563.NetworkInfo.collectNetworkInfo] NAT64 prefix to use: ; Error: nil
220228 11:32:24.523 [INFO][6563.TunnelSettings.includedIPv4RangesTeams] []
220228 11:32:24.523 [INFO][6563.TunnelSettings.includedIPv4RangesTeams] []
220228 11:32:24.524 [INFO][6563.TunnelSettings.includedIPv6RangesTeams] []
220228 11:32:24.524 [INFO][6563.TunnelSettings.includedIPv6RangesTeams] []
220228 11:32:24.524 [INFO][6563.TunnelSettings.includedIPv4RangesTeams] []
220228 11:32:24.524 [INFO][6563.TunnelSettings.includedIPv4RangesTeams] []
220228 11:32:24.529 [INFO][6563.LogExtension.networkInfo] Cellular: [Beeline, MCC: 250, MNC: 99, Mobile TeleSystems, MCC: 250, MNC: 01] - WiFi: [] - NAT64: false - DNS search domains: [] - Path DNS servers: ["10.10.32.131", "8.8.8.8"]
220228 11:32:24.529 [INFO][6563.Tunnel.updateNetwork] network settings created: {
    tunnelRemoteAddress = ::1
    DNSSettings = {
        protocol = cleartext
        server = (
            192.0.2.2,
            192.0.2.3,
            2001:db8:1111::2,
            2001:db8:1111::3,
        )
        matchDomains = (
            ,
        )
        matchDomainsNoSearch = NO
    }
    IPv4Settings = {
        configMethod = PPP
        addresses = (
            192.0.2.1,
        )
        subnetMasks = (
            255.255.255.255,
        )
        includedRoutes = (
            {
                destinationAddress = 0.0.0.0
                destinationSubnetMask = 0.0.0.0
            },
        )
        excludedRoutes = (
            {
                destinationAddress = 192.0.2.1
                destinationSubnetMask = 255.255.255.255
            },
            {
                destinationAddress = 10.0.0.0
                destinationSubnetMask = 255.0.0.0
            },
            {
                destinationAddress = 100.64.0.0
                destinationSubnetMask = 255.192.0.0
            },
            {
                destinationAddress = 169.254.0.0
                destinationSubnetMask = 255.255.0.0
            },
            {
                destinationAddress = 172.16.0.0
                destinationSubnetMask = 255.240.0.0
            },
            {
                destinationAddress = 192.0.0.0
                destinationSubnetMask = 255.255.255.0
            },
            {
                destinationAddress = 192.168.0.0
                destinationSubnetMask = 255.255.0.0
            },
            {
                destinationAddress = 224.0.0.0
                destinationSubnetMask = 255.255.255.0
            },
            {
                destinationAddress = 240.0.0.0
                destinationSubnetMask = 240.0.0.0
            },
            {
                destinationAddress = 255.255.255.255
                destinationSubnetMask = 255.255.255.255
            },
        )
        overridePrimary = NO
    }
    IPv6Settings = {
        configMethod = automatic
        addresses = (
            fd01:5ca1:ab1e:86f8:26ac:51b:a824:6910,
        )
        networkPrefixLengths = (
            120,
        )
        includedRoutes = (
            {
                destinationAddress = ::
                destinationNetworkPrefixLength = 0
            },
        )
        excludedRoutes = (
            {
                destinationAddress = fd01:5ca1:ab1e:86f8:26ac:51b:a824:6910
                destinationNetworkPrefixLength = 128
            },
            {
                destinationAddress = fe80::
                destinationNetworkPrefixLength = 10
            },
            {
                destinationAddress = fd00::
                destinationNetworkPrefixLength = 8
            },
            {
                destinationAddress = ff01::
                destinationNetworkPrefixLength = 16
            },
            {
                destinationAddress = ff02::
                destinationNetworkPrefixLength = 16
            },
            {
                destinationAddress = ff03::
                destinationNetworkPrefixLength = 16
            },
            {
                destinationAddress = ff04::
                destinationNetworkPrefixLength = 16
            },
            {
                destinationAddress = ff05::
                destinationNetworkPrefixLength = 16
            },
        )
    }
    MTU = 1280
}
220228 11:32:24.622 [INFO][6563.Tunnel.updateNetwork] settings successfully applied
220228 11:32:24.623 [INFO][6563.DNS.dnsOverTlsResolvers] DNS over TLS; ["162.159.36.1", "162.159.46.1"]
220228 11:32:24.623 [INFO][6563.DNS.updateResolvers] Path DNS; ["10.10.32.131", "8.8.8.8"]
220228 11:32:24.623 [INFO][6563.DNS.updateResolvers] dnsProtocol: dot, pathDns: ["10.10.32.131", "8.8.8.8"], ipv4: true, ipv6: false, warpEnabled: true, dns64Detected: false
220228 11:32:24.623 [INFO][6563.Tunnel.warpConnect] Warp: connecting
220228 11:32:24.630 [INFO][6563.LogExtension.networkInfo] Cellular: [Mobile TeleSystems, MCC: 250, MNC: 01, Beeline, MCC: 250, MNC: 99] - WiFi: [] - Path DNS servers: ["10.10.32.131", "8.8.8.8"]
220228 11:32:24.630 [INFO][6563.WarpLegacyUDPSession.happyEyeballs] Warp: happy eyeballs sessions created
220228 11:32:24.630 [INFO][6563.WarpLegacyUDPSession.happyEyeballs] Warp: happy eyeballs racer registered for IPv6
220228 11:32:24.631 [INFO][6563.WarpLegacyUDPSession.happyEyeballs] Warp: happy eyeballs racer registered for IPv4
220228 11:32:24.631 [INFO][6563.WarpLegacyUDPSession.happyEyeballs] Warp: happy eyeballs for IPv4 state changed to: UDPSessionStateReady (The session is ready for reading and writing data))
220228 11:32:24.632 [INFO][6563.WarpLegacyUDPSession.happyEyeballs] Warp: happy eyeballs for IPv4 - is viable
220228 11:32:24.632 [INFO][6563.WarpLegacyUDPSession.happyEyeballs] Path - status: satisfied, expensive: true, ipv4: true, ipv6: false
220228 11:32:24.632 [INFO][6563.WarpLegacyUDPSession.happyEyeballs] Warp: happy eyeballs for IPv6 state changed to: UDPSessionStateWaiting (The session is waiting for better conditions before attempting to make the session ready))
220228 11:32:24.632 [INFO][6563.WarpLegacyUDPSession.happyEyeballs] Warp: happy eyeballs for IPv6 state changed to: UDPSessionStateFailed (None of the currently resolved endpoints can be used at this time, either due to problems with the path or the client rejecting the endpoints))
220228 11:32:24.632 [INFO][6563.Warp.log_func] BoringTun: Sending handshake_initiation
220228 11:32:24.633 [INFO][6563.WarpLegacyUDPSession.happyEyeballs] Warp: happy eyeballs for IPv4 - send OK
220228 11:32:26.784 [INFO][6563.Warp.log_func] BoringTun: Sending handshake_initiation
220228 11:32:26.785 [INFO][6563.WarpLegacyUDPSession.happyEyeballs] Warp: happy eyeballs for IPv4 - send OK
220228 11:32:27.905 [INFO][6563.Warp.log_func] BoringTun: Sending handshake_initiation
220228 11:32:27.905 [INFO][6563.WarpLegacyUDPSession.happyEyeballs] Warp: happy eyeballs for IPv4 - send OK
220228 11:32:29.024 [INFO][6563.WarpLegacyUDPSession.happyEyeballs] Warp: happy eyeballs race did not complete in the alloted time
220228 11:32:29.025 [ERROR][6563.WarpLegacyUDPSession.happyEyeballs] Warp: happy eyeballs for IPv4 - read failed: Error Domain=NSPOSIXErrorDomain Code=89 "Operation canceled" (code 89)
220228 11:32:29.025 [ERROR][6563.Tunnel.warpConnect] Warp: No handshake response, retrying: _1dot1dot1dot_worker.TunnelError.noHandshakeResponse (code 21)