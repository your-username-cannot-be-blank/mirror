[
    {
        "id": 195,
        "name": null,
        "username": "ValdikSS",
        "avatar_template": "/user_avatar/ntc.party/valdikss/{size}/2_2.png",
        "created_at": "2019-09-23T14:48:14.861Z",
        "cooked": "<aside class=\"onebox githubrepo\" data-onebox-src=\"https://github.com/darkk/rstlss\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/darkk/rstlss\" target=\"_blank\" rel=\"noopener\">github.com</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"github-row\" data-github-private-repo=\"false\">\n  <img width=\"690\" height=\"344\" src=\"rstlss—proof-of-concept-of-an-unprivileged-linuxandroid-process-using-a-bpf-filter-to-block-rst-packets/679a37f3bfc11dfb88f45a898d2cafb35069612a_2_690x344.png\" class=\"thumbnail\" data-dominant-color=\"EAEFF0\">\n\n  <h3><a href=\"https://github.com/darkk/rstlss\" target=\"_blank\" rel=\"noopener\">GitHub - darkk/rstlss: Proof-of-concept of an unprivileged Linux process...</a></h3>\n\n    <p><span class=\"github-repo-description\">Proof-of-concept of an unprivileged Linux process using a BPF filter to block RST packets</span></p>\n</div>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<p>Small example of using BPF to block TCP RST by <a class=\"mention\" href=\"/u/darkk\">@darkk</a>. Works on Android, does not require root.</p>\n<p><code>rstlss</code> is an example of an unprivileged Linux process using a BPF filter to block certain TCP packets coming to the socket.</p>\n<p>This specific example shows how to circumvent one-sided <a href=\"https://en.wikipedia.org/wiki/TCP_reset_attack\">TCP reset attack</a> by an <em>on-path</em> DPI box <a href=\"http://isitblockedinrussia.com/?host=https%3A%2F%2Frutracker.org\">blocking</a> <code>https://rutracker.org</code> (as <em>Inappropriate TCP Resets Considered Harmful</em> ). <img src=\"https://ntc.party/images/emoji/twitter/slight_smile.png?v=12\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n<p><em>On-path</em> DPI box is assumed to be <em>passive</em> , being unable to <em>drop</em> packets, just being able to inject some.</p>\n<p><em>One-sided TCP reset attack</em> means that RST packet is injected only towards the “client” endpoints and the “server” does not get another RST. E.g. some networks in <a href=\"https://ooni.torproject.org/post/uganda-social-media-tax/#vpn-blocking\">Uganda block OpenVPN/TCP</a> with two-sided TCP reset attacks. One has to control the server as well to mitigate two-sided attack.</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 3,
        "updated_at": "2019-09-23T15:21:57.102Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 165,
        "reads": 20,
        "readers_count": 19,
        "score": 859.0,
        "yours": false,
        "topic_id": 108,
        "topic_slug": "rstlss%E2%80%94proof-of-concept-of-an-unprivileged-linuxandroid-process-using-a-bpf-filter-to-block-rst-packets",
        "display_username": null,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
            {
                "url": "https://github.com/darkk/rstlss",
                "internal": false,
                "reflection": false,
                "title": "GitHub - darkk/rstlss: Proof-of-concept of an unprivileged Linux process using a BPF filter to block RST packets",
                "clicks": 41
            },
            {
                "url": "https://ooni.torproject.org/post/uganda-social-media-tax/#vpn-blocking",
                "internal": false,
                "reflection": false,
                "title": "OONI - Uganda's Social Media Tax through the lens of network measurements",
                "clicks": 5
            },
            {
                "url": "https://en.wikipedia.org/wiki/TCP_reset_attack",
                "internal": false,
                "reflection": false,
                "title": "TCP reset attack - Wikipedia",
                "clicks": 5
            },
            {
                "url": "http://isitblockedinrussia.com/?host=https%3A%2F%2Frutracker.org",
                "internal": false,
                "reflection": false,
                "title": "Is It Blocked In Russia?",
                "clicks": 4
            }
        ],
        "read": true,
        "user_title": "AntiZapret staff",
        "title_is_group": false,
        "bookmarked": false,
        "actions_summary": [
            {
                "id": 2,
                "count": 2
            }
        ],
        "moderator": true,
        "admin": true,
        "staff": true,
        "user_id": 1,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": false,
        "wiki": false,
        "post_url": "/t/rstlss%E2%80%94proof-of-concept-of-an-unprivileged-linuxandroid-process-using-a-bpf-filter-to-block-rst-packets/108/1",
        "can_translate": false
    },
    {
        "id": 196,
        "name": null,
        "username": "ValdikSS",
        "avatar_template": "/user_avatar/ntc.party/valdikss/{size}/2_2.png",
        "created_at": "2019-09-23T15:17:58.161Z",
        "cooked": "<p>Note that you can’t use eBPF on Android: bpf() syscall is blocked by seccomp (it’s allowed only for system, but not for user applications). Android seccomp whitelists all syscalls in SYSCALLS.TXT, and then blacklists some, or whitelists missing. Since bpf() is missing from SYSCALLS.TXT and not whitelisted for applications, we can’t use bpf() on stock Android.<br>\nSee <a href=\"https://github.com/aosp-mirror/platform_bionic/tree/master/libc\" rel=\"nofollow noopener\">https://github.com/aosp-mirror/platform_bionic/tree/master/libc</a></p>\n<p>You can still use regular BPF (don’t confuse it with bpf() syscall which is used for eBPF).</p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 3,
        "updated_at": "2019-09-23T15:18:43.555Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 5,
        "reads": 19,
        "readers_count": 18,
        "score": 28.8,
        "yours": false,
        "topic_id": 108,
        "topic_slug": "rstlss%E2%80%94proof-of-concept-of-an-unprivileged-linuxandroid-process-using-a-bpf-filter-to-block-rst-packets",
        "display_username": null,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
            {
                "url": "https://github.com/aosp-mirror/platform_bionic/tree/master/libc",
                "internal": false,
                "reflection": false,
                "title": "platform_bionic/libc at master · aosp-mirror/platform_bionic · GitHub",
                "clicks": 6
            }
        ],
        "read": true,
        "user_title": "AntiZapret staff",
        "title_is_group": false,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": true,
        "admin": true,
        "staff": true,
        "user_id": 1,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": false,
        "wiki": false,
        "post_url": "/t/rstlss%E2%80%94proof-of-concept-of-an-unprivileged-linuxandroid-process-using-a-bpf-filter-to-block-rst-packets/108/2",
        "can_translate": false
    },
    {
        "id": 351,
        "name": null,
        "username": "ValdikSS",
        "avatar_template": "/user_avatar/ntc.party/valdikss/{size}/2_2.png",
        "created_at": "2019-10-09T19:00:21.128Z",
        "cooked": "<p>cBPF and eBPF support test example for Android, C source code and armv7/arm64 binaries.<br>\n<a class=\"attachment\" href=\"rstlss—proof-of-concept-of-an-unprivileged-linuxandroid-process-using-a-bpf-filter-to-block-rst-packets/zm7Jid4dowEkTRlHwtsTKDxNTV1.zip\">bpftest_android.zip</a> (6.0 KB)</p>\n<p>More information here: <a href=\"https://www.reddit.com/r/androiddev/comments/93raql/help_me_test_ebpf_support_on_modern_android/\">https://www.reddit.com/r/androiddev/comments/93raql/help_me_test_ebpf_support_on_modern_android/</a></p>",
        "post_number": 3,
        "post_type": 1,
        "posts_count": 3,
        "updated_at": "2019-10-09T19:00:21.128Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 8,
        "reads": 16,
        "readers_count": 15,
        "score": 43.2,
        "yours": false,
        "topic_id": 108,
        "topic_slug": "rstlss%E2%80%94proof-of-concept-of-an-unprivileged-linuxandroid-process-using-a-bpf-filter-to-block-rst-packets",
        "display_username": null,
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
            {
                "url": "https://www.reddit.com/r/androiddev/comments/93raql/help_me_test_ebpf_support_on_modern_android/",
                "internal": false,
                "reflection": false,
                "title": "Help me test eBPF support on modern Android devices : androiddev",
                "clicks": 28
            },
            {
                "url": "/uploads/short-url/zm7Jid4dowEkTRlHwtsTKDxNTV1.zip",
                "internal": true,
                "reflection": false,
                "clicks": 0
            }
        ],
        "read": true,
        "user_title": "AntiZapret staff",
        "title_is_group": false,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": true,
        "admin": true,
        "staff": true,
        "user_id": 1,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": false,
        "wiki": false,
        "post_url": "/t/rstlss%E2%80%94proof-of-concept-of-an-unprivileged-linuxandroid-process-using-a-bpf-filter-to-block-rst-packets/108/3",
        "can_translate": false
    }
]