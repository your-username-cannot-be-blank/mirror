[
    {
        "id": 5155,
        "name": "",
        "username": "tango",
        "avatar_template": "/letter_avatar_proxy/v4/letter/t/e36b37/{size}.png",
        "created_at": "2022-01-20T03:05:15.576Z",
        "cooked": "<p>dnstt-server requires you to specify a single DNS zone for the tunnel (<a href=\"https://repo.or.cz/dnstt.git/blob/d92a791b6864901f9263f7d73d97cfd30ac53b09:/README#l130\">e.g. t.example.com</a>). Only queries that are under the zone are processed for tunnel data; all others are discarded. Let’s discuss the possibility of letting dnstt-server process queries under <em>any</em> zone. That would make it possible to set up “aliases” for a single dnstt-server instance, under different DNS names. Such aliases could be set up by anyone, not only by the person who runs the dnstt-server.</p>\n<p>I was thinking about this during the <a href=\"https://ntc.party/t/network-shutdown-all-around-kazakhstan/1601\">Kazakhstan shutdown</a>. <a href=\"https://ntc.party/t/network-shutdown-all-around-kazakhstan/1601/33\">It was discovered</a> that dnstt in plaintext UDP port 53 mode could get through the shutdown. The problem is that plaintext UDP port 53 mode <a href=\"https://www.bamsoftware.com/software/dnstt/#caveats\">is not covert</a>. A censor can inspect the contents of DNS queries, and block the ones that are for a subdomain of a known dnstt server.</p>\n<p>For example, I could run an instance of dnstt-server and <a href=\"https://www.bamsoftware.com/software/dnstt/#dns-setup\">set up DNS records</a> pointing to it:</p>\n<ul>\n<li><strong>A</strong> tns.tunnel.example points to 203.0.113.2</li>\n<li><strong>NS</strong> t.tunnel.example is managed by tns.tunnel.example</li>\n</ul>\n<p>If I posted publicly, “there is a dnstt-server running at t.tunnel.example,” any censor could read the post and add t.tunnel.example to its blocking rules. But if dnstt-server were modified to respond to queries for any domain, then anyone could set up their own DNS records, under a domain they control, pointing to the same IP addresses:</p>\n<ul>\n<li><strong>A</strong> tns.rhinoceros.example points to 203.0.113.2</li>\n<li><strong>NS</strong> t.rhinoceros.example is managed by tns.rhinoceros.example</li>\n</ul>\n<p>They could then <em>privately</em> use dnstt-client with the DNS zone t.rhinoceros.example, a DNS name that the censor does not know about. If an alias gets discovered and blocked, you can make a new one, without needing to relocate the dnstt-server.</p>\n<p>For this idea to work, you need to be using a recursive resolver located outside the censor’s area of control—otherwise the censor can just block the dnstt-server’s IP address. In the case of the Kazakhstan shutdown, <a href=\"https://ntc.party/t/network-shutdown-all-around-kazakhstan/1601/24\">8.8.8.8</a> would have worked.</p>\n<p>The reason the idea might work at all is that DNS queries do not contain the IP address of the eventual authoritative resolver, only its DNS name. A censor could block this scheme by working through the name abstraction, looking up NS records for DNS queries it observes, then matching them against a database of known DNS tunnel servers. In the example above, having seen a query for xxx.t.rhinoceros.example, a censor could look up the NS for rhinoceros.example, then ask that NS for the NS of t.rhinoceros.example, then resolve tns.rhinoceros.example to find the IP address 203.0.113.2. The censor could then match the IP address against a database of known tunnel proxies. These dynamic lookups are probably awkward to do at line rate for every query, but they could be made more practical by testing domains in batches, or probabilistically.</p>\n<p>A tunnel that uses plaintext DNS, even with a DNS zone that is unknown to the censor, is still probably identifiable anyway, because of the distinctive kinds of DNS messages it uses.</p>\n<p>I normally don’t like this kind of circumvention design, where success depends on the censor’s being ignorant. But in an extreme case like an Internet shutdown, where it’s difficult to get any kind of access, I think it’s justified to try things even if they are theoretically unsound.</p>\n<h3><a name=\"user-interface-1\" class=\"anchor\" href=\"#user-interface-1\"></a>User interface</h3>\n<p>Supposing we do permit dnstt-server to respond to queries for any domain, what should the user interface look like? Currently, the DNS zone is part of the command-line interface:</p>\n<blockquote>\n<p><strong>dnstt-client</strong> <strong>-udp</strong> <em>HOST</em>:<em>PORT</em> <strong>-pubkey-file</strong> <em>FILENAME</em> <em>DOMAIN</em> <em>LOCALADDR</em>:<em>LOCALPORT</em></p>\n</blockquote>\n<p>One way would be to make the <em>DOMAIN</em> argument optional. If dnstt-server gets only 1 non-option argument, it will not restrict the domain of incoming queries:</p>\n<blockquote>\n<p><strong>dnstt-client</strong> <strong>-udp</strong> <em>HOST</em>:<em>PORT</em> <strong>-pubkey-file</strong> <em>FILENAME</em> <em>LOCALADDR</em>:<em>LOCALPORT</em></p>\n</blockquote>\n<p>Another way would be to make the <em>DOMAIN</em> argument a wildcard. You could pass <strong>*</strong> to permit any domain.</p>\n<blockquote>\n<p><strong>dnstt-client</strong> <strong>-udp</strong> <em>HOST</em>:<em>PORT</em> <strong>-pubkey-file</strong> <em>FILENAME</em> <strong>*</strong> <em>LOCALADDR</em>:<em>LOCALPORT</em></p>\n</blockquote>\n<p>Or, we could add a new command line option that means to ignore the <em>DOMAIN</em> argument.</p>",
        "post_number": 1,
        "post_type": 1,
        "posts_count": 2,
        "updated_at": "2022-01-20T03:05:15.576Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 337,
        "reads": 33,
        "readers_count": 32,
        "score": 1686.6,
        "yours": false,
        "topic_id": 1650,
        "topic_slug": "idea-let-dnstt-server-respond-to-any-dns-zone",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "link_counts": [
            {
                "url": "https://www.bamsoftware.com/software/dnstt/#caveats",
                "internal": false,
                "reflection": false,
                "title": "dnstt – DoH- and DoT-capable DNS tunnel",
                "clicks": 2
            },
            {
                "url": "https://ntc.party/t/network-shutdown-all-around-kazakhstan/1601",
                "internal": true,
                "reflection": false,
                "title": "Network shutdown, all around Kazakhstan",
                "clicks": 2
            },
            {
                "url": "https://ntc.party/t/network-shutdown-all-around-kazakhstan/1601/33",
                "internal": true,
                "reflection": false,
                "title": "Network shutdown, all around Kazakhstan",
                "clicks": 1
            },
            {
                "url": "https://www.bamsoftware.com/software/dnstt/#dns-setup",
                "internal": false,
                "reflection": false,
                "title": "dnstt – DoH- and DoT-capable DNS tunnel",
                "clicks": 1
            },
            {
                "url": "https://repo.or.cz/dnstt.git/blob/d92a791b6864901f9263f7d73d97cfd30ac53b09:/README#l130",
                "internal": false,
                "reflection": false,
                "clicks": 0
            },
            {
                "url": "https://ntc.party/t/network-shutdown-all-around-kazakhstan/1601/24",
                "internal": true,
                "reflection": false,
                "title": "Network shutdown, all around Kazakhstan",
                "clicks": 0
            },
            {
                "url": "https://ntc.party/t/%D1%83%D1%80%D0%BE%D0%BA%D0%B8-%D0%B2%D1%8B%D0%BD%D0%B5%D1%81%D0%B5%D0%BD%D0%BD%D1%8B%D0%B5-%D0%B8%D0%B7-%D0%BE%D1%82%D0%BA%D0%BB%D1%8E%D1%87%D0%B5%D0%BD%D0%B8%D1%8F-%D0%B8%D0%BD%D1%82%D0%B5%D1%80%D0%BD%D0%B5%D1%82%D0%B0-%D0%B2-%D0%BA%D0%B0%D0%B7%D0%B0%D1%85%D1%81%D1%82%D0%B0%D0%BD%D0%B5-%D0%B2-%D1%8F%D0%BD%D0%B2%D0%B0%D1%80%D0%B5-2022-%D0%B3%D0%BE%D0%B4%D0%B0-%D0%B4%D0%BB%D1%8F-%D0%BE%D0%B1%D1%85%D0%BE%D0%B4%D0%B0-%D1%86%D0%B5%D0%BD%D0%B7%D1%83%D1%80%D1%8B/1686",
                "internal": true,
                "reflection": true,
                "title": "Уроки, вынесенные из отключения интернета в Казахстане в январе 2022 года для обхода цензуры",
                "clicks": 0
            }
        ],
        "read": true,
        "user_title": "dnstt developer",
        "title_is_group": false,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 26,
        "hidden": false,
        "trust_level": 3,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": false,
        "wiki": false,
        "post_url": "/t/idea-let-dnstt-server-respond-to-any-dns-zone/1650/1",
        "can_translate": false
    },
    {
        "id": 5156,
        "name": "",
        "username": "bolvan",
        "avatar_template": "/letter_avatar_proxy/v4/letter/b/8e8cbc/{size}.png",
        "created_at": "2022-01-20T08:07:45.025Z",
        "cooked": "<p>Wildcard option looks the best to me. Or move away from positional arguments to named ones.</p>\n<p>From my tests many public DNS already implement rate limiting. Some ISPs also have rate limits in their DNS.<br>\nThis can be the most effective measure to stop using bandwidth consuming content although unable to stop low bandwidth usage cases - messengers, email</p>\n<p>Also it is important to not open DNS amplification to net scanners</p>\n<p>Its likely if DNS tunnels become widespread they will block them. The fastest way to achieve this goal is to offer simple solution for everyone</p>",
        "post_number": 2,
        "post_type": 1,
        "posts_count": 2,
        "updated_at": "2022-01-20T08:12:18.375Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "incoming_link_count": 4,
        "reads": 26,
        "readers_count": 25,
        "score": 25.2,
        "yours": false,
        "topic_id": 1650,
        "topic_slug": "idea-let-dnstt-server-respond-to-any-dns-zone",
        "display_username": "",
        "primary_group_name": null,
        "flair_name": null,
        "flair_url": null,
        "flair_bg_color": null,
        "flair_color": null,
        "flair_group_id": null,
        "badges_granted": [],
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_see_hidden_post": false,
        "can_wiki": false,
        "read": true,
        "user_title": "Zapret anti-DPI software staff",
        "title_is_group": false,
        "bookmarked": false,
        "actions_summary": [],
        "moderator": true,
        "admin": false,
        "staff": true,
        "user_id": 19,
        "hidden": false,
        "trust_level": 3,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": false,
        "wiki": false,
        "post_url": "/t/idea-let-dnstt-server-respond-to-any-dns-zone/1650/2",
        "can_translate": false
    }
]